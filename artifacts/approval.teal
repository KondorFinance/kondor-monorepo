#pragma version 7
intcblock 0 1 4 3
bytecblock 0x67 0x61 0x62 0x63 0x70 0x2d
txn NumAppArgs
intc_0 // 0
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0x08a956f7 // "set_governor(account)void"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x4cd1ec96 // "bootstrap(pay,asset,asset,asset)uint64"
==
bnz main_l6
txna ApplicationArgs 0
pushbytes 0xd0c6a163 // "mint(axfer,asset,asset)void"
==
bnz main_l5
err
main_l5:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 18
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 19
txn GroupIndex
intc_1 // 1
-
store 17
load 17
gtxns TypeEnum
intc_2 // axfer
==
assert
load 17
load 18
load 19
callsub mint_5
intc_1 // 1
return
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 1
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 2
txna ApplicationArgs 3
intc_0 // 0
getbyte
store 3
txn GroupIndex
intc_1 // 1
-
store 0
load 0
gtxns TypeEnum
intc_1 // pay
==
assert
load 0
load 1
load 2
load 3
callsub bootstrap_4
store 4
pushbytes 0x151f7c75 // 0x151f7c75
load 4
itob
concat
log
intc_1 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
callsub setgovernor_3
intc_1 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l10
err
main_l10:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
bytec_0 // "g"
global CreatorAddress
app_global_put
retsub

// auth_only
authonly_1:
bytec_0 // "g"
app_global_get
==
retsub

// auth_only
authonly_2:
bytec_0 // "g"
app_global_get
==
retsub

// set_governor
setgovernor_3:
store 20
txn Sender
callsub authonly_1
// unauthorized
assert
bytec_0 // "g"
load 20
txnas Accounts
app_global_put
retsub

// bootstrap
bootstrap_4:
store 8
store 7
store 6
store 5
txn Sender
callsub authonly_2
// unauthorized
assert
global GroupSize
pushint 2 // 2
==
// group size not 2
assert
load 5
gtxns Receiver
global CurrentApplicationAddress
==
// receiver not app address
assert
load 5
gtxns Amount
pushint 300000 // 300000
>=
// amount minimum not met
assert
load 6
txnas Assets
load 7
txnas Assets
!=
load 6
txnas Assets
load 8
txnas Assets
!=
&&
load 7
txnas Assets
load 8
txnas Assets
!=
&&
// asset a or asset b or asset c incorrect
assert
intc_0 // 0
bytec_1 // "a"
app_global_get_ex
store 10
store 9
load 10
!
assert
bytec_1 // "a"
load 6
txnas Assets
app_global_put
intc_0 // 0
bytec_2 // "b"
app_global_get_ex
store 12
store 11
load 12
!
assert
bytec_2 // "b"
load 7
txnas Assets
app_global_put
intc_0 // 0
bytec_3 // "c"
app_global_get_ex
store 14
store 13
load 14
!
assert
bytec_3 // "c"
load 8
txnas Assets
app_global_put
intc_0 // 0
bytec 4 // "p"
app_global_get_ex
store 16
store 15
load 16
!
assert
bytec 4 // "p"
bytec_1 // "a"
app_global_get
bytec_2 // "b"
app_global_get
bytec_3 // "c"
app_global_get
callsub docreatepondtoken_8
app_global_put
bytec_1 // "a"
app_global_get
callsub dooptin_7
bytec_2 // "b"
app_global_get
callsub dooptin_7
bytec_3 // "c"
app_global_get
callsub dooptin_7
bytec 4 // "p"
app_global_get
retsub

// mint
mint_5:
store 35
store 34
store 33
retsub

// do_axfer
doaxfer_6:
store 24
store 23
store 22
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
load 23
itxn_field XferAsset
load 24
itxn_field AssetAmount
load 22
itxn_field AssetReceiver
intc_0 // 0
itxn_field Fee
itxn_submit
retsub

// do_opt_in
dooptin_7:
store 21
global CurrentApplicationAddress
load 21
intc_0 // 0
callsub doaxfer_6
retsub

// do_create_pond_token
docreatepondtoken_8:
store 26
store 25
asset_params_get AssetUnitName
store 28
store 27
load 25
asset_params_get AssetUnitName
store 30
store 29
load 26
asset_params_get AssetUnitName
store 32
store 31
load 28
assert
load 30
assert
load 32
assert
itxn_begin
intc_3 // acfg
itxn_field TypeEnum
pushbytes 0x4b4f4946492d56312d504f4e442d // "KOIFI-V1-POND-"
load 27
concat
bytec 5 // "-"
concat
load 29
concat
bytec 5 // "-"
concat
load 31
concat
itxn_field ConfigAssetName
pushbytes 0x504f4e44 // "POND"
itxn_field ConfigAssetUnitName
pushint 10000000000 // 10000000000
itxn_field ConfigAssetTotal
intc_3 // 3
itxn_field ConfigAssetDecimals
global CurrentApplicationAddress
itxn_field ConfigAssetManager
global CurrentApplicationAddress
itxn_field ConfigAssetReserve
intc_0 // 0
itxn_field Fee
itxn_submit
itxn CreatedAssetID
retsub